// task2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <fstream>
#include <stdio.h>
#include <math.h>

using namespace std;

int prov(float Px, float Py, float Ax, float Ay, float Bx, float By)
{
	return (Bx - Ax) * (Py - Ay) - (By - Ay) * (Px - Ax);
}

int main(int argc, char* argv[])
{
	float a[4][2];
	float b[100][2];
	ifstream f(argv[1]);
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 2; j++)
		{
			f >> a[i][j];
		}
	}
	f.close();


	char* str = new char[1024];
	int k = 0;
	ifstream fl(argv[2]);
	while (!fl.eof())
	{
		fl.getline(str, 1024, '\n');
		k++;
	}
	
	fl.close();

	ifstream file(argv[2]);
	for (int m = 0; m < k; m++)
	{
		for (int l = 0; l < 2; l++)
		{
			file >> b[m][l];
		}
	}

	

	for (int t = 0; t < k; t++)
	{
		int
			p1 = prov(b[t][0], b[t][1], a[0][0], a[0][1], a[1][0], a[1][1]),
			p2 = prov(b[t][0], b[t][1], a[1][0], a[1][1], a[2][0], a[2][1]),
			p3 = prov(b[t][0], b[t][1], a[2][0], a[2][1], a[3][0], a[3][1]),
			p4 = prov(b[t][0], b[t][1], a[3][0], a[3][1], a[0][0], a[0][1]);


		if ((b[t][0] == a[0][0] && b[t][1] == a[0][1]) || (b[t][0] == a[1][0] && b[t][1] == a[1][1]) ||
			(b[t][0] == a[2][0] && b[t][1] == a[2][1]) || (b[t][0] == a[3][0] && b[t][1] == a[3][1]))
			cout << 0 << '\n';

		else if ((p1 == 0 && a[0][1] < b[t][1] < a[1][1] && a[0][0] < b[t][1] < a[1][0]) || (p2 == 0 && a[1][0] < b[t][0] < a[2][0] && a[1][1] < b[t][1] < a[2][1])
			|| (p3 == 0 && a[2][1] < b[t][1] < a[3][1] && a[2][0] < b[t][1] < a[3][0]) || (p4 == 0 && a[3][0] < b[t][0] < a[0][0] && a[3][1] < b[t][1] < a[0][1]))
			cout << 1 << '\n';

		else if (p1 < 0 && p2 < 0 && p3 < 0 && p4 < 0)
			cout << 2 << '\n';

		else if (p1 > 0 || p2 > 0 || p3 > 0 || p4 > 0)
			cout << 3 << '\n';
	}
	
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
